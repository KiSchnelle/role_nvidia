---
# tasks file for role_nvidia
- name: Check OS version and family
  ansible.builtin.fail:
    msg: "This role can only be run against CentOS 7 and 8 or Ubuntu 20. {{ ansible_distribution }} {{ ansible_distribution_major_version }} is not supported."
  when:
    (ansible_distribution|lower == 'centos' and ansible_distribution_major_version is version_compare('7', '<')) or
    (ansible_distribution|lower == 'centos' and ansible_distribution_major_version is version_compare('8', '>')) or
    (ansible_distribution|lower == 'ubuntu' and ansible_distribution_major_version is version_compare('20', '!='))

- name: Check OS version and family
  ansible.builtin.debug:
    msg: "PASS | This role can only be executed on CentOS 7 and 8 and Ubuntu 20 operating systems, detected {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
  when:
    (ansible_distribution|lower == 'centos' and ansible_distribution_major_version is version_compare('7', '==')) or
    (ansible_distribution|lower == 'centos' and ansible_distribution_major_version is version_compare('8', '==')) or
    (ansible_distribution|lower == 'ubuntu' and ansible_distribution_major_version is version_compare('20', '=='))

- name: Populate service facts.
  ansible.builtin.service_facts:

- name: Unload noveau
  community.general.modprobe:
    name: nouveau
    state: absent
  ignore_errors: true

- name: Blacklist nouveau module.
  community.general.kernel_blacklist:
    name: nouveau
    state: present

- name: Check if nvidia-smi is available.
  ansible.builtin.shell:
    cmd: nvidia-smi
  register: nvidia_installed
  ignore_errors: true
  changed_when: false

- name: Make sure needed kernel stuff is installed.
  include_tasks: kernel_installs.yml

- name: Install from runtime file.
  include_tasks: runtime.yml
  when: runtime_install

- name: Install for ubuntu.
  include_tasks: ubuntu.yml
  when: ansible_distribution|lower == 'ubuntu' and not runtime_install

# - name: Install for CentOS.
#   include_tasks: centos.yml
#   when: ansible_distribution|lower == 'centos' and not runtime_install

- name: Enable persitance mode.
  include_tasks: persistance.yml
  when: persistance_mode|bool

- name: Unload nvidia modules.
  community.general.modprobe:
    name: "{{ item }}"
    state: absent
  with_items:
    - "nvidia_uvm"
    - "nvidia_drm"
    - "nvidia_modeset"
    - "nvidia"
  when: nvidia_installed is not failed
  ignore_errors: true

- name: Call nvidia-smi.
  ansible.builtin.shell: nvidia-smi
  register: nvidia_smi_output

- name: Print nvidia-smi output.
  ansible.builtin.debug:
    msg: "{{ nvidia_smi_output.stdout_lines }}"
